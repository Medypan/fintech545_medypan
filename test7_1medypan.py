# -*- coding: utf-8 -*-
"""test7.1medypan.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IN_Out2i5AdXUft5airCFEYGT4U6H4hT
"""

!mkdir -p data src scripts

# Commented out IPython magic to ensure Python compatibility.
# %%writefile requirements.txt
# numpy==1.26.4
# pandas==2.2.2
#

# Commented out IPython magic to ensure Python compatibility.
# %%writefile src/normal_fit.py
# import numpy as np
# import pandas as pd
# 
# def fit_normal_mle(x: np.ndarray):
# 
#     x = np.asarray(x, dtype=float).ravel()
#     x = x[~np.isnan(x)]
#     if x.size < 2:
#         raise ValueError("Need at least 2 observations to fit a normal distribution.")
#     mu = float(x.mean())
#     sigma = float(x.std(ddof=0))
#     if sigma <= 0:
#         raise ValueError("Standard deviation is zero; data may be constant.")
#     return {"mu": mu, "sigma": sigma}
# 
# def load_first_numeric_column(csv_path: str):
# 
#     try:
#         df = pd.read_csv(csv_path, header=0)
#         for col in df.columns:
#             s = pd.to_numeric(df[col], errors="coerce")
#             if s.notna().any():
#                 return s.values
#     except Exception:
#         pass
# 
#     df = pd.read_csv(csv_path, header=None)
#     s = pd.to_numeric(df.iloc[:, 0], errors="coerce")
#     return s.values
#

# Commented out IPython magic to ensure Python compatibility.
# %%writefile scripts/run_fit_normal.py
# import argparse
# import pandas as pd
# from pathlib import Path
# from src.normal_fit import fit_normal_mle, load_first_numeric_column
# 
# def main():
#     parser = argparse.ArgumentParser(
#         description="Fit a normal distribution (MLE) and write mu/sigma to CSV."
#     )
#     parser.add_argument("--input", "-i", required=True, help="Path to input CSV (e.g., data/test7_1.csv)")
#     parser.add_argument("--output", "-o", required=True, help="Path to output CSV (e.g., data/testout7_1.csv)")
#     args = parser.parse_args()
# 
#     x = load_first_numeric_column(args.input)
#     res = fit_normal_mle(x)
# 
#     out_df = pd.DataFrame({"mu": [res["mu"]], "sigma": [res["sigma"]]})
#     Path(args.output).parent.mkdir(parents=True, exist_ok=True)
#     out_df.to_csv(args.output, index=False)
# 
# if __name__ == "__main__":
#     main()
#

!pip install -r requirements.txt

!PYTHONPATH=. python scripts/run_fit_normal.py --input data/test7_1.csv --output data/testout7_1.csv

import pandas as pd
df = pd.read_csv("data/testout7_1.csv")
print(df)
assert list(df.columns) == ["mu", "sigma"], "columns must be mu,sigma"
assert len(df) == 1, "Ouput should be exacly one row"
print("correct ouput format")

import os, glob, pprint
print("PWD =", os.getcwd())
pprint.pprint(sorted(glob.glob("*")))

# Commented out IPython magic to ensure Python compatibility.
# %%writefile README.md
# # Homework 7.1 â€” Fit Normal Distribution
# 
# ## How to run
# ```bash
# pip install -r requirements.txt
# python scripts/run_fit_normal.py --input data/test7_1.csv --output data/testout7_1.csv
#